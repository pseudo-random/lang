; MIT License
;
; Copyright (c) 2018 pseudo-random <josh.leh.2018@gmail.com>
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
; SOFTWARE.

(import transform)
(import translate)
(import generate)

(internal js-require vm)
(defn run-javascript! [code std-scope]
  (let [scope   (insert std-scope :symbols
                        (internal js-property symbols))
        context (internal to-js scope)]
    (internal js vm.createContext context)
    (internal js vm.runInContext code context)))

(defn provide-to-compiled [scope]
  (map-keys scope generate/generate-name))

(defn package-with-runtime [code]
  (format "(() => {" generate/runtime ";return " code "})()"))

(defn eval [expr scope]
  (-> (transform/to-syntax-tree expr)
      (translate/translate)
      (generate/generate)
      (package-with-runtime)
      (run-javascript! (provide-to-compiled scope))))
